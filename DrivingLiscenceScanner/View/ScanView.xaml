<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="DrivingLicenceScanner.View.ScanView"
             mc:Ignorable="d"
             d:DesignHeight="566"
             d:DesignWidth="2026.95">
    <UserControl.Resources>
        <DataTemplate x:Key="CustomerLegalStatusTemplate">
        	<Grid Height="Auto"
        		Width="Auto">
        		<Ellipse 
        			Stroke="#FF464646"
        			Height="150"
        			Width="150"
        			Style="{DynamicResource EllipseStyle}" StrokeThickness="10">
        			<Ellipse.Resources>
        				<Style x:Key="EllipseStyle"
        					TargetType="{x:Type Ellipse}">
        					<Style.Triggers>
        						<DataTrigger Value="True"
        							Binding="{Binding Allowed}">
        							<Setter Property="Fill"
        								Value="DarkOliveGreen"/>
        						</DataTrigger>
        						<DataTrigger Value="False"
        							Binding="{Binding Allowed}">
        							<Setter Property="Fill"
        								Value="DarkRed"/>
        						</DataTrigger>
        					</Style.Triggers>
        				</Style>
        			</Ellipse.Resources>
        		</Ellipse>
        		<TextBlock Text="{Binding Name}"
        			VerticalAlignment="Center"
        			HorizontalAlignment="Center" FontSize="21.333" FontWeight="Bold" Foreground="#FFB2B2B2" />
        	</Grid>
        </DataTemplate>
    </UserControl.Resources>
    <UserControl.Template>
        <ControlTemplate>
            <Grid x:Name="RootElement"
                  DataContext="{Binding ScanViewModel, Source={StaticResource ViewModelLocator}}"
                  d:DataContext="{d:DesignData /SampleData/ScanViewModelSampleData.xaml}">
                <VisualStateManager.VisualStateGroups>
                	<VisualStateGroup x:Name="ScanStates" >
                		<VisualStateGroup.Transitions>
                			<VisualTransition From="AfterState" GeneratedDuration="0" To="BeforeState">
                				<Storyboard>
                					<DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" From="0.995"/>
                					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                						<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                					</ObjectAnimationUsingKeyFrames>
                					<DoubleAnimation Duration="0" To="53.333" Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="textBlock"/>
                					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="textBlock">
                						<DiscreteObjectKeyFrame KeyTime="0">
                							<DiscreteObjectKeyFrame.Value>
                								<FontWeight>Bold</FontWeight>
                							</DiscreteObjectKeyFrame.Value>
                						</DiscreteObjectKeyFrame>
                					</ObjectAnimationUsingKeyFrames>
                				</Storyboard>
                			</VisualTransition>
                		</VisualStateGroup.Transitions>
                		<VisualState x:Name="BeforeState"/>
                		<VisualState x:Name="AfterState">
                			<Storyboard>
                				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                					<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                				</ObjectAnimationUsingKeyFrames>
                				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                					<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                				</DoubleAnimationUsingKeyFrames>
                				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TxtBlkReady">
                					<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                				</ObjectAnimationUsingKeyFrames>
                				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TxtBlkReady">
                					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                				</DoubleAnimationUsingKeyFrames>
                				<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="listBox">
                					<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10,20,10,0"/>
                				</ThicknessAnimationUsingKeyFrames>
                				<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="textBlock">
                					<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="20,5,5,5"/>
                				</ThicknessAnimationUsingKeyFrames>
                				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="textBlock">
                					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                				</DoubleAnimationUsingKeyFrames>
                				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="textBlock">
                					<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static VerticalAlignment.Bottom}"/>
                				</ObjectAnimationUsingKeyFrames>
                			</Storyboard>
                		</VisualState>
                		<VisualState x:Name="ErrorState">
                			<Storyboard>
                				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TxtBlkReady">
                					<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                				</ObjectAnimationUsingKeyFrames>
                				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TxtBlkReady">
                					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                				</DoubleAnimationUsingKeyFrames>
                				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TxtBlkError">
                					<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                				</DoubleAnimationUsingKeyFrames>
                				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TxtBlkError">
                					<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                					<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                				</ObjectAnimationUsingKeyFrames>
                				<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="TxtBlkError">
                					<EasingColorKeyFrame KeyTime="0" Value="Gray"/>
                					<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFD85959"/>
                				</ColorAnimationUsingKeyFrames>
                				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="TxtBlkError">
                					<EasingDoubleKeyFrame KeyTime="0" Value="40"/>
                					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                				</DoubleAnimationUsingKeyFrames>
                			</Storyboard>
                		</VisualState>
                	</VisualStateGroup>
                	<VisualStateGroup x:Name="ValidationStates">
                		<VisualState x:Name="Valid" />
                		<VisualState x:Name="InvalidFocused" />
                		<VisualState x:Name="InvalidUnfocused" />
                	</VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Grid.RowDefinitions>
                	<RowDefinition Height="50" />
                	<RowDefinition Height="Auto" />
                	<RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                	<ColumnDefinition Width="*" />
                	<ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
            	<i:Interaction.Triggers>
            		<ei:DataTrigger Binding="{Binding Customer}" Value="{}{x:NuLL}">
            			<ei:GoToStateAction StateName="BeforeState" TargetName="RootElement"/>
            		</ei:DataTrigger>
            		<ei:DataTrigger Binding="{Binding Customer}" Value="{}{x:NuLL}" Comparison="NotEqual">
            			<ei:GoToStateAction StateName="AfterState" TargetName="RootElement"/>
            		</ei:DataTrigger>
            		<ei:DataTrigger Binding="{Binding ErrorMessage}" Comparison="NotEqual">
            			<ei:GoToStateAction StateName="ErrorState" TargetName="RootElement"/>
            		</ei:DataTrigger>
            	</i:Interaction.Triggers>
            	<TextBlock Style="{DynamicResource TxtBlkTitleStyle}"><Run Text="Scan" /></TextBlock>
            	<TextBox x:Name="TxtBoxScan"
            		Text="{Binding ScanText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            		Style="{DynamicResource TxtBoxScanStyle}"
            		AcceptsReturn="True"
            		AcceptsTab="True"
            		Grid.Row="1"
            		FontSize="5.333"
            		FontFamily="Rod"
            		VerticalContentAlignment="Center" Height="30" Background="#4CFFFFFF" />
            	<Button Grid.Row="1"
            		Grid.Column="1"
            		Content="Scan"
            		Command="{Binding ScanCommand}"
            		Style="{StaticResource BtnScanViewStyle}" />
            	<TextBlock Visibility="Visible"
            		x:Name="TxtBlkReady"
            		Grid.Row="2"
            		Grid.Column="0"
            		Text="Ready to scan..."
            		Style="{DynamicResource TxtBlkMessageStyle}" />
            	<TextBlock x:Name="TxtBlkError"
            		Grid.Row="2"
            		Grid.Column="0"
            		Text="{Binding ErrorMessage, FallbackValue=Error}"
            		Style="{DynamicResource TxtBlkMessageStyle}"
            		Visibility="Collapsed" RenderTransformOrigin="0.5,0.5" >
            		<TextBlock.RenderTransform>
            			<TransformGroup>
            				<ScaleTransform/>
            				<SkewTransform/>
            				<RotateTransform/>
            				<TranslateTransform/>
            			</TransformGroup>
            		</TextBlock.RenderTransform>
            	</TextBlock>
            	<Grid x:Name="grid"
            		Grid.Row="3"
            		Grid.Column="0"
            		Grid.ColumnSpan="2"
            		Visibility="Collapsed"
            		Opacity="0">
            		<Grid.RowDefinitions>
            			<RowDefinition Height="Auto" />
            			<RowDefinition Height="Auto" />
            			<RowDefinition Height="Auto" />
            			<RowDefinition Height="Auto" />
            		</Grid.RowDefinitions>
            		<StackPanel Grid.Row="0"
            			Orientation="Horizontal">
            			<TextBlock  Style="{DynamicResource TxtBlkNameStyle}"><Run Text="{Binding Customer.FirstName, FallbackValue=Jane}" /><Run Text=" " /><Run Text="{Binding Customer.LastName, FallbackValue=Doe}" /></TextBlock>
            			<TextBlock x:Name="textBlock"  Text="{Binding Age, FallbackValue=19}"
            				Style="{DynamicResource TxtBlkAgeStyle}" />
            		</StackPanel>
            		<ListBox x:Name="listBox"  ItemsPanel="{DynamicResource ItemsPanelTemplate}"
            			Grid.Row="2"
            			ItemTemplate="{DynamicResource CustomerLegalStatusTemplate}"
            			ItemsSource="{Binding CustomerLegalStatuses}" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" ScrollViewer.CanContentScroll="False" SnapsToDevicePixels="True" Margin="10,50,10,0" ItemContainerStyle="{DynamicResource LstBoxLegalAgesContainerStyle}" />
            	</Grid>
            </Grid>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>
